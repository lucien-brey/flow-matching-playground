[project]
name = "flow-matching-playground"
version = "0.0.1"
description = "Playground to experiment with flow matching"
requires-python = ">=3.13"

# CORE RUNTIME DEPENDENCIES - needed to RUN the code
dependencies = [
  "torch==2.7.0",
  "hydra-core",
  "pre-commit"
]

[tool.pdm]
python.use_uv = true

[tool.pdm.build]
build-isolation = true

# DEVELOPMENT ONLY DEPENDENCIES - needed for testing, linting, notebooks etc.
[tool.pdm.dev-dependencies]
test = [
    "pytest>=8.3.2",
    "pytest-cov>=5.0.0",
    "codecov>=2.1.13",   # For uploading coverage reports
    "coveralls>=4.0.1",  # Alternative/additional coverage reporter
]
lint = [
     "ruff>=0.6.2",     # Linter & formatter
     "mypy>=1.11.1",    # Static type checker
     "pre-commit>=4.1.0", # Git hook management
]
notebook = [
    "ipykernel>=6.29.5",   # For running Jupyter kernels
]
debug = [
    "debugpy>=1.8.12",     # For VS Code and other debuggers
]

[tool.ruff]
line-length = 125
indent-width = 4
target-version = "py313"
exclude = [".devcontainer", ".github", ".vscode", "submodules", "pdm.lock"]

[tool.ruff.lint]
# possible rules: https://beta.ruff.rs/docs/rules/
select = [
  "B",   # flake8-bugbear
  "C",   # flake8-comprehensions
  "E",   # pycodestyle errors
  "F",   # pyflakes
  "I",   # isort
  "W",   # pycodestyle warnings
  "PL",  # pylint
  "N",   # pep-8 variable names
  "S",   # flake8-bandit
  "RUF", # ruff rules
]
exclude = [
  # TODO: make autogenerated stuff ruff compatible and remove this
]
ignore = [
  "ANN002", # missing type annotation for *args
  "ANN003", # missing type annotation for **kwargs
  "ANN101", # missing type annotation for self in method
  "ANN102", # missing type annotation for cls in class methods
  "D100",   # module docstrings
  "D104",   # package docstrings
  "D203",
  "D213",
  "D401",   # imperative mood for the first line
  "D407",   # dashed underline after Returns
  "E402",
  "E741",   # ambiguous variable name
  "N801",
  "N806",
  "N803",
  "N812",
  "N815",
  "N816",
  "PLW2901",
  "PLR2004",
  "RUF013" # implicit optional -> should be removed when annotation is added
]

[tool.ruff.lint.per-file-ignores]
"tests/**.py" = [
  "S101", # allow usage of assert in tests
]
"__init__.py" = [
  "F401", # allow unused imports in __init__.py files
]

[tool.ruff.lint.pylint]
max-args = 16  # allow up to eight arguments to functions -> to be reduced later

[tool.ruff.format]
quote-style = "double"
indent-style = "space"